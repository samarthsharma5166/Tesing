name: build-and-lint

on:
  push:
    branches: [main, dev]
  pull_request:
    branches: [main, dev]

jobs:
  build-and-lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Install backend dependencies
        working-directory: backend
        run: npm ci
      
      - name: Lint backend
        working-directory: backend
        run: npm run lint -- --max-warnings=0

      - name: Install frontend dependencies
        working-directory: frontend
        run: npm ci

      - name: Lint frontend
        working-directory: frontend
        run: npm run lint -- --max-warnings=0

      - name: Build backend image
        working-directory: backend
        run: docker build -t backend-image .

      - name: Build frontend image
        working-directory: frontend
        run: docker build -t frontend-image .
  deploy:
   needs: build-and-lint
   if: github.event_name == 'push'
   runs-on: ubuntu-latest
   steps:
      - name: Checkout (optional)
        uses: actions/checkout@v4

      - name: add ec2 host to known hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H "$EC2_HOST" >> ~/.ssh/known_hosts
          chmod 644 ~/.ssh/known_hosts 
        env: 
          EC2_HOST: ${{ secrets.EC2_HOST }}

      - name: Write SSH Key
        run: |
          echo "${EC2_KEY}" > Tesing.pem
          chmod 600 Tesing.pem
        env:
          EC2_KEY: ${{ secrets.EC2_KEY }}

      - name: Deploy on EC2 (git pull and docker compose up -d --build)
        env:
            EC2_USER: ${{ secrets.EC2_USER }}
            EC2_HOST: ${{ secrets.EC2_HOST }}
            EC2_APP_DIR: ${{ secrets.EC2_APP_DIR }}
        run: |
          echo "Deploying to EC2 instance..."
          ssh -i Tesing.pem ${secrets.EC2_USER}@${EC2_HOST} << 'EOF'
          set -e
          cd ${EC2_APP_DIR}
          
          git fetch --all
          git reset --hard origin/main
          docker compose up -d --build
          docker image prune -f
          docker compose ps
          EOF